name: Main Build

on:
  push:
    branches:
      - master


jobs:
  build:
    name: Build
    runs-on: self-hosted
    #permissions: read-all
    steps:
#      -  name: Configure Git safe directory        
#         run: |
#          if ($env:GITHUB_ACTIONS -eq "true") {
#           git config --global --add safe.directory C:/action-runner/_work/sonarQubeDotNet/sonarQubeDotNet
#           }      
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: C:\actions-runner\_work\_actions\actions\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: C:\actions-runner\_work\sonarQubeDotNet\sonarQubeDotNet\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"SergioAVega_sonarQubeDotNet_AYuRTcoeMv0giqkxllET" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
          dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
